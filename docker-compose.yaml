version: "3.8"
services: 
  app:
    build: ./app/
    image: first-ml-service:latest
    container_name: first-ml-service-container-app
    restart: unless-stopped
    env_file:
    - ./app/.env
    volumes:
      - ./app:/app
#    healthcheck:
#      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8080/health')"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#      start_period: 20s

  # web:
  #   image: nginx:latest
  #   container_name: first-ml-service-container-nginx
  #   restart: unless-stopped
  #   ports:
  #     - '80:443'
  #   depends_on:
  #     app:
  #       condition: service_healthy
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  db:
    image: postgres:latest
    container_name: first-ml-service-container-db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
  rabbitmq:
    image: rabbitmq:latest
    container_name: first-ml-service-container-rabbitmq
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - '15672:5672'
volumes:
  postgres_data:



